services:
  gateway:
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile.dev
    container_name: api-gateway
    restart: always
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - PORT=8000
      - ISSUE_SERVICE_URL=${ISSUE_SERVICE_URL}
      - VERIFY_SERVICE_URL=${VERIFY_SERVICE_URL}
    depends_on:
      - cred-issue-service
      - cred-verify-service
    volumes:
    - ./backend/gateway:/app
    - /app/node_modules
 
  frontend:
    build:
      context: ./frontend/
      dockerfile: Dockerfile.dev
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_FETCH_CREDENTIALS=${NEXT_PUBLIC_FETCH_CREDENTIALS}
      - SERVER_URL=${SERVER_URL}
      - FETCH_CREDENTIALS=${FETCH_CREDENTIALS}
      - WATCHPACK_POLLING=true
      - NEXT_PUBLIC_ISSUE_API_URL=${NEXT_PUBLIC_ISSUE_API_URL}
      - NEXT_PUBLIC_VERIFY_API_URL=${NEXT_PUBLIC_VERIFY_API_URL}

    stdin_open: true
    tty: true
    depends_on:
      - gateway

  cred-issue-service:
    build:
      context: ./backend/Cred-issue/backend
      dockerfile: dockerfile.dev
    container_name: credIssue
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./backend/Cred-issue/backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=${ISSUE_MONGODB_URI}
      - WORKER_ID=worker-issue-1
    depends_on:
      - mongodb 

  cred-verify-service:
    build:
      context: ./backend/Cred-verify/backend 
      dockerfile: dockerfile.dev
    container_name: credVerify
    restart: always  
    ports:
      - "5005:5005"
    volumes:
      - ./backend/Cred-verify/backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - MONGODB_URI=${VERIFY_MONGODB_URI}
      - WORKER_ID=worker-verify-1
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data_dev:/data/db

volumes:
  mongodb_data_dev: