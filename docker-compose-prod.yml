
version: '3.9'
services:
  gateway:
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile.prod
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - ISSUE_SERVICE_URL=${ISSUE_SERVICE_URL}
      - VERIFY_SERVICE_URL=${VERIFY_SERVICE_URL}
    depends_on:
      - cred-issue-service
      - cred-verify-service

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - gateway

  cred-issue-service:
    build:
      context: ./backend/Cred-issue/backend
      dockerfile: Dockerfile.prod
    container_name: credIssue
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${ISSUE_MONGODB_URI}
    depends_on:
      - mongodb

  cred-verify-service:
    build:
      context: ./backend/Cred-verify/backend
      dockerfile: Dockerfile.prod
    container_name: credVerify
    restart: unless-stopped
    ports:
      - "5005:5005"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${VERIFY_MONGODB_URI}
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - mongodb_data_prod:/data/db

volumes:
  mongodb_data_prod: